@model FossLock.Web.ViewModels.LicenseViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Generate A License</h2>
<h3>@Model.CustomerName</h3>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.GenerationDateTime)
    @Html.HiddenFor(m => m.CustomerId)

    <div>
        @Html.ValidationSummary(excludePropertyErrors: true)

        <h4>Product Information</h4>
        <ul>
            <li>
                @Html.LabelFor(m => m.ProductId)
                <select name="ProductId" required></select>
                @Html.ValidationMessageFor(m => m.ProductId)
            </li>
            <li>
                @Html.LabelFor(m => m.ProductVersionId)
                <select name="ProductVersionId" required></select>
                @Html.ValidationMessageFor(m => m.ProductVersionId)
            </li>
        </ul>

        <h4>Extra</h4>
        <ul>
            <li>
                @Html.LabelFor(m => m.Notes)
                @Html.EditorFor(m => m.Notes)
                @Html.ValidationMessageFor(m => m.Notes)
            </li>
            <li>
                @Html.LabelFor(m => m.NetworkLicenseCount)
                @Html.EditorFor(m => m.NetworkLicenseCount)
                @Html.ValidationMessageFor(m => m.NetworkLicenseCount)
            </li>
            <li>
                @Html.LabelFor(m => m.OverrideDefaultLockProperties)
                @Html.EditorFor(m => m.OverrideDefaultLockProperties)
            </li>
            <li>
                @Html.LabelFor(m => m.RequiredLockProperties)
                @Html.ListBoxFor(m => m.RequiredLockProperties, Model.AllLockProperties)
                @Html.ValidationMessageFor(m => m.RequiredLockProperties)
            </li>
        </ul>
    </div>

    <input type="submit" value="Create" />
}

<div>
    @Html.ActionLink("Back to Product", "Edit", new { controller = "Product", id = Model.ProductId })
</div>

@section js {
    <script src="~/Static/js/License/LicenseFormManager.js"></script>
    <script>

        var formManager = null;

        try {
            $.getJSON("/API/Product/", function (json) {
                "use strict";

                formManager = LicenseFormManager('select[name="ProductId"]',
                                                 'select[name="ProductVersionId"]',
                                                 'select[name="RequiredLockProperties"]',
                                                 'input[name="OverrideDefaultLockProperties"]',
                                                 json);

                formManager.PopulateProducts();
            });
        }
        catch (e) {
            console.log("Error initializing form manager: " + e);
        }
    </script>
}